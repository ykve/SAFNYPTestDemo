// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Cmd

typedef GPB_ENUM(Cmd) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Cmd_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 心跳包 */
  Cmd_CmsgHello = 0,
  Cmd_SmsgHello = 1,

  /** 登录 */
  Cmd_CmsgLogin = 2,
  Cmd_SmsgLogin = 3,

  /** 踢人 */
  Cmd_SmsgKickOut = 4,

  /** 发送消息 */
  Cmd_CmsgSendMessage = 5,
  Cmd_SmsgSendMessage = 6,

  /**
   * CMsgStateGlobal = 7; // 全部好友的状态
   * SMsgStateGlobal = 8;
   **/
  Cmd_CmsgStateUser = 9,
  Cmd_SmsgStateUser = 10,

  /** 设置自己的状态 */
  Cmd_CmsgSetUserState = 11,
  Cmd_SmsgSetUserState = 12,

  /** 接收消息确认 */
  Cmd_CmsgRecvMessage = 13,
  Cmd_SmsgRecvMessage = 14,

  /** 删除消息 */
  Cmd_CmsgDelMessage = 15,
  Cmd_SmsgDelMessage = 16,

  /** 输入中 */
  Cmd_CmsgInputMessage = 17,
  Cmd_SmsgInputMessage = 18,

  /** 拉取消息 */
  Cmd_CmsgMessageList = 19,
  Cmd_SmsgMessageList = 20,

  /** 获取未读会话列表 */
  Cmd_CmsgUnReadSessionList = 21,
  Cmd_SmsgUnReadSessionList = 22,

  /** 获取未读会话列表 */
  Cmd_CmsgMessageLastList = 23,
  Cmd_SmsgMessageLastList = 24,

  /** 已读消息 */
  Cmd_CmsgReadMessage = 25,
  Cmd_SmsgReadMessage = 26,
  Cmd_CmsgReadMessageAck = 27,

  /** 实时显示输入内容 */
  Cmd_CmsgRealTimeDisplay = 28,
  Cmd_SmsgRealTimeDisplay = 29,

  /** 获取玩家IP信息(只有客服才有权限获取) */
  Cmd_CmsgClientIpInfo = 30,
  Cmd_SmsgClientIpInfo = 31,

  /** 离开客服会话 */
  Cmd_CmsgLeaveKefuSession = 32,

  /** SMsgLeaveKefuSession = 33; */
  Cmd_CmsgKefuQueueInfo = 34,
  Cmd_SmsgKefuQueueInfo = 35,

  /** 禁言客服会话(只有客服发协议) */
  Cmd_CmsgNoSpeakKefuSession = 36,
  Cmd_SmsgNoSpeakKefuSession = 37,

  /** 断开客服会话(只有客服发协议) */
  Cmd_CmsgDisconnectKefuSession = 38,
  Cmd_SmsgDisconnectKefuSession = 39,

  /** 镜像发送请求(只有总客服收到协议) */
  Cmd_SmsgMirrorKefuSendMessage = 40,

  /** CMsgUserQueueInfo = 41;  // 获取排队信息 */
  Cmd_SmsgUserQueueInfo = 42,

  /** 删除消息确认 */
  Cmd_CmsgDelMessageAck = 43,

  /** 通知 */
  Cmd_SmsgNotifyStateChange = 100,

  /** 有新消息通知 */
  Cmd_SmsgNotifyNewMessage = 101,

  /** 会话添加通知(需要发确认) */
  Cmd_SmsgNotifySessionAdd = 102,

  /** 会话删除通知(需要发确认) */
  Cmd_SmsgNotifySessionDel = 103,

  /** 会话改变通知(需要发确认) */
  Cmd_SmsgNotifySessionUpdate = 104,

  /** 会话成员新增通知(需要发确认) */
  Cmd_SmsgNotifySessionMemberAdd = 105,

  /** 会话成员删除通知(需要发确认) */
  Cmd_SmsgNotifySessionMemberDel = 106,

  /** 添加好友通知(需要发确认) */
  Cmd_SmsgNotifyAddFriends = 107,

  /** 公告通知 */
  Cmd_SmsgNotifyAnnouncement = 108,

  /** 用户信息更新通知(需要发确认) */
  Cmd_SmsgNotifyUserInfoUpdate = 109,

  /** 会话成员信息更新通知(需要发确认) */
  Cmd_SmsgNotifySessionMemberInfoUpdate = 110,

  /** 通用通知 */
  Cmd_SmsgNotifyPush = 111,

  /** 注意：以后新增的通知协议，旧客户端没有办法处理的，直接返回通知确认 */
  Cmd_CmsgNotifyAck = 199,
};

GPBEnumDescriptor *Cmd_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Cmd_IsValidValue(int32_t value);

#pragma mark - CommonRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CommonRoot : GPBRootObject
@end

#pragma mark - MyPacket

typedef GPB_ENUM(MyPacket_FieldNumber) {
  MyPacket_FieldNumber_Cmd = 1,
  MyPacket_FieldNumber_Uid = 2,
  MyPacket_FieldNumber_ReqId = 3,
  MyPacket_FieldNumber_Extend = 4,
};

@interface MyPacket : GPBMessage

/** 命令 */
@property(nonatomic, readwrite) Cmd cmd;

/** 用户ID */
@property(nonatomic, readwrite) uint64_t uid;

/** Req请求传上去的seq，Rsp的seq必须一样，用GUID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *reqId;

/** 扩展协议 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *extend;

@end

/**
 * Fetches the raw value of a @c MyPacket's @c cmd property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t MyPacket_Cmd_RawValue(MyPacket *message);
/**
 * Sets the raw value of an @c MyPacket's @c cmd property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMyPacket_Cmd_RawValue(MyPacket *message, int32_t value);

#pragma mark - CHello

typedef GPB_ENUM(CHello_FieldNumber) {
  CHello_FieldNumber_ClientTime = 1,
};

@interface CHello : GPBMessage

/** 当前时间截 */
@property(nonatomic, readwrite) uint32_t clientTime;

@end

#pragma mark - SHello

typedef GPB_ENUM(SHello_FieldNumber) {
  SHello_FieldNumber_Interval = 1,
  SHello_FieldNumber_ServerTime = 2,
};

@interface SHello : GPBMessage

/** next hello time */
@property(nonatomic, readwrite) uint32_t interval;

@property(nonatomic, readwrite) uint32_t serverTime;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
