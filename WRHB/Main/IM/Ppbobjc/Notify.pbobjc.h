// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notify.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Announcement;
@class SessionMemberInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - NotifyRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface NotifyRoot : GPBRootObject
@end

#pragma mark - SessionMemberInfo

typedef GPB_ENUM(SessionMemberInfo_FieldNumber) {
  SessionMemberInfo_FieldNumber_UserId = 1,
  SessionMemberInfo_FieldNumber_Name = 2,
  SessionMemberInfo_FieldNumber_Avatar = 3,
};

/**
 * 会话成员信息
 **/
@interface SessionMemberInfo : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) uint64_t userId;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

@end

#pragma mark - SNotifySessionAdd

typedef GPB_ENUM(SNotifySessionAdd_FieldNumber) {
  SNotifySessionAdd_FieldNumber_SessionId = 1,
  SNotifySessionAdd_FieldNumber_SessionVer = 2,
  SNotifySessionAdd_FieldNumber_Name = 3,
  SNotifySessionAdd_FieldNumber_Desc = 4,
  SNotifySessionAdd_FieldNumber_Avatar = 5,
  SNotifySessionAdd_FieldNumber_PlayType = 6,
  SNotifySessionAdd_FieldNumber_NumberLimit = 7,
  SNotifySessionAdd_FieldNumber_Type = 8,
  SNotifySessionAdd_FieldNumber_PacketRange = 9,
  SNotifySessionAdd_FieldNumber_MembersArray = 10,
  SNotifySessionAdd_FieldNumber_Initiator = 11,
};

/**
 * 会话新增通知(需要离线保存)
 **/
@interface SNotifySessionAdd : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite) uint64_t sessionId;

/** 修改版本号 */
@property(nonatomic, readwrite) uint32_t sessionVer;

/** 群名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

/** 玩法 */
@property(nonatomic, readwrite) int32_t playType;

/** 限制 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *numberLimit;

/** 类型 */
@property(nonatomic, readwrite) int32_t type;

/** 红包范围 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *packetRange;

/** 添加的成员信息列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SessionMemberInfo*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

/** 创建者 */
@property(nonatomic, readwrite) uint64_t initiator;

@end

#pragma mark - SNotifySessionUpdate

typedef GPB_ENUM(SNotifySessionUpdate_FieldNumber) {
  SNotifySessionUpdate_FieldNumber_SessionId = 1,
  SNotifySessionUpdate_FieldNumber_Name = 2,
  SNotifySessionUpdate_FieldNumber_Desc = 3,
  SNotifySessionUpdate_FieldNumber_Avatar = 4,
  SNotifySessionUpdate_FieldNumber_Notice = 5,
  SNotifySessionUpdate_FieldNumber_PlayType = 6,
  SNotifySessionUpdate_FieldNumber_NumberLimit = 7,
  SNotifySessionUpdate_FieldNumber_Type = 8,
  SNotifySessionUpdate_FieldNumber_PacketRange = 9,
};

/**
 * 会话更新通知(需要离线保存)
 **/
@interface SNotifySessionUpdate : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite) uint64_t sessionId;

/** 会话名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

/** 注意事项 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *notice;

/** 玩法类型 */
@property(nonatomic, readwrite) int32_t playType;

/** 金额范围 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *numberLimit;

/** 会话类型 */
@property(nonatomic, readwrite) int32_t type;

/** 发包范围 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *packetRange;

@end

#pragma mark - SNotifySessionDel

typedef GPB_ENUM(SNotifySessionDel_FieldNumber) {
  SNotifySessionDel_FieldNumber_SessionId = 1,
};

/**
 * 会话删除通知(需要离线保存)
 **/
@interface SNotifySessionDel : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite) uint64_t sessionId;

@end

#pragma mark - SNotifySessionMemberAdd

typedef GPB_ENUM(SNotifySessionMemberAdd_FieldNumber) {
  SNotifySessionMemberAdd_FieldNumber_SessionId = 1,
  SNotifySessionMemberAdd_FieldNumber_AddMembersArray = 3,
  SNotifySessionMemberAdd_FieldNumber_SessionVer = 4,
  SNotifySessionMemberAdd_FieldNumber_Name = 5,
  SNotifySessionMemberAdd_FieldNumber_Desc = 6,
  SNotifySessionMemberAdd_FieldNumber_Avatar = 7,
  SNotifySessionMemberAdd_FieldNumber_PlayType = 8,
  SNotifySessionMemberAdd_FieldNumber_NumberLimit = 9,
  SNotifySessionMemberAdd_FieldNumber_Type = 10,
  SNotifySessionMemberAdd_FieldNumber_PacketRange = 11,
  SNotifySessionMemberAdd_FieldNumber_MembersArray = 12,
  SNotifySessionMemberAdd_FieldNumber_Initiator = 13,
};

/**
 * 会话成员添加通知(需要离线保存)
 **/
@interface SNotifySessionMemberAdd : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite) uint64_t sessionId;

/** SessionInfo session_info = 2; */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SessionMemberInfo*> *addMembersArray;
/** The number of items in @c addMembersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger addMembersArray_Count;

/** 修改版本号 */
@property(nonatomic, readwrite) uint32_t sessionVer;

/** 群名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 描述 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

/** 玩法 */
@property(nonatomic, readwrite) int32_t playType;

/** 限制 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *numberLimit;

/** 类型 */
@property(nonatomic, readwrite) int32_t type;

/** 红包范围 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *packetRange;

/** 添加的成员信息列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SessionMemberInfo*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

/** 创建者 */
@property(nonatomic, readwrite) uint64_t initiator;

@end

#pragma mark - SNotifySessionMemberDel

typedef GPB_ENUM(SNotifySessionMemberDel_FieldNumber) {
  SNotifySessionMemberDel_FieldNumber_SessionId = 1,
  SNotifySessionMemberDel_FieldNumber_DelIdsArray = 2,
};

/**
 * 会话成员删除通知(需要离线保存)
 **/
@interface SNotifySessionMemberDel : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite) uint64_t sessionId;

/** 删除的成员ID列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt64Array *delIdsArray;
/** The number of items in @c delIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger delIdsArray_Count;

@end

#pragma mark - SNotifyAddFriends

typedef GPB_ENUM(SNotifyAddFriends_FieldNumber) {
  SNotifyAddFriends_FieldNumber_Type = 1,
  SNotifyAddFriends_FieldNumber_Applicant = 2,
  SNotifyAddFriends_FieldNumber_Respondent = 3,
};

/**
 * 同意加好友通知(需要离线保存)
 **/
@interface SNotifyAddFriends : GPBMessage

/** 类型, 1: 申请, 2: 同意, 3: 拒绝 */
@property(nonatomic, readwrite) int32_t type;

/** 申请人 */
@property(nonatomic, readwrite) uint64_t applicant;

/** 被申请人 */
@property(nonatomic, readwrite) uint64_t respondent;

@end

#pragma mark - Announcement

typedef GPB_ENUM(Announcement_FieldNumber) {
  Announcement_FieldNumber_Id_p = 1,
  Announcement_FieldNumber_Detail = 2,
  Announcement_FieldNumber_Description_p = 3,
  Announcement_FieldNumber_Sort = 4,
};

/**
 * 公告更新通知
 **/
@interface Announcement : GPBMessage

/** 公告IDD */
@property(nonatomic, readwrite) int32_t id_p;

/** 标题 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *detail;

/** 内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** 排序 */
@property(nonatomic, readwrite) int32_t sort;

@end

#pragma mark - SNotifyAnnouncement

typedef GPB_ENUM(SNotifyAnnouncement_FieldNumber) {
  SNotifyAnnouncement_FieldNumber_InfosArray = 1,
};

@interface SNotifyAnnouncement : GPBMessage

/** 公告列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Announcement*> *infosArray;
/** The number of items in @c infosArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger infosArray_Count;

@end

#pragma mark - SNotifyUserInfoUpdate

typedef GPB_ENUM(SNotifyUserInfoUpdate_FieldNumber) {
  SNotifyUserInfoUpdate_FieldNumber_UserId = 1,
  SNotifyUserInfoUpdate_FieldNumber_Name = 2,
  SNotifyUserInfoUpdate_FieldNumber_Avatar = 3,
  SNotifyUserInfoUpdate_FieldNumber_Gender = 4,
};

/**
 * 用户信息更新通知(需要离线保存)
 **/
@interface SNotifyUserInfoUpdate : GPBMessage

/** 用户ID */
@property(nonatomic, readwrite) uint64_t userId;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像D */
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

/** 性别, 1:未知, 2:男, 3:女 */
@property(nonatomic, readwrite) int32_t gender;

@end

#pragma mark - SNotifySessionMemberInfoUpdate

typedef GPB_ENUM(SNotifySessionMemberInfoUpdate_FieldNumber) {
  SNotifySessionMemberInfoUpdate_FieldNumber_SessionIdsArray = 1,
  SNotifySessionMemberInfoUpdate_FieldNumber_UserId = 2,
  SNotifySessionMemberInfoUpdate_FieldNumber_Name = 3,
  SNotifySessionMemberInfoUpdate_FieldNumber_Avatar = 4,
  SNotifySessionMemberInfoUpdate_FieldNumber_Gender = 5,
};

/**
 * 会话成员信息更新通知
 **/
@interface SNotifySessionMemberInfoUpdate : GPBMessage

/** 会话ID列表 */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt64Array *sessionIdsArray;
/** The number of items in @c sessionIdsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sessionIdsArray_Count;

/** 用户ID */
@property(nonatomic, readwrite) uint64_t userId;

/** 名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** 头像 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

/** 性别, 1:未知, 2:男, 3:女 */
@property(nonatomic, readwrite) int32_t gender;

@end

#pragma mark - SNotifyPush

typedef GPB_ENUM(SNotifyPush_FieldNumber) {
  SNotifyPush_FieldNumber_Sender = 1,
  SNotifyPush_FieldNumber_Action = 2,
  SNotifyPush_FieldNumber_Extras = 3,
};

/**
 * 通用推送通知
 **/
@interface SNotifyPush : GPBMessage

/** 发送者 */
@property(nonatomic, readwrite) uint64_t sender;

/** 消息类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *action;

/** 扩展消息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *extras;

@end

#pragma mark - SNotifyTransferStatus

typedef GPB_ENUM(SNotifyTransferStatus_FieldNumber) {
  SNotifyTransferStatus_FieldNumber_SessionId = 1,
  SNotifyTransferStatus_FieldNumber_TransferId = 2,
  SNotifyTransferStatus_FieldNumber_Sender = 3,
  SNotifyTransferStatus_FieldNumber_Operator_p = 4,
  SNotifyTransferStatus_FieldNumber_Status = 5,
};

/**
 * 转账状态通知
 **/
@interface SNotifyTransferStatus : GPBMessage

/** 会话ID */
@property(nonatomic, readwrite) uint64_t sessionId;

/** 转账ID */
@property(nonatomic, readwrite) uint64_t transferId;

/** 转账者 */
@property(nonatomic, readwrite) uint64_t sender;

/** 操作者(谁退还了, 谁领取了, 自动退还为0) */
@property(nonatomic, readwrite) uint64_t operator_p;

/** 状态, 1: 手动退还, 2: 自动退还, 3: 领取 */
@property(nonatomic, readwrite) int32_t status;

@end

#pragma mark - CNotifyAck

/**
 * 通知确认
 * 发此协议时，需要客户端返回req_id
 **/
@interface CNotifyAck : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
